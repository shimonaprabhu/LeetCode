class Solution:
    def solveNQueens(self, n: int) -> List[List[str]]:
        ans=[]
        board=[]
        for _ in range(n):
            board.append(["." for i in range(n)])
        leftrow=[0]*n
        upperdiagonal=[0]*((2*n)-1)
        lowerdiagonal=[0]*((2*n)-1)
        self.solve(0,board,ans,leftrow,upperdiagonal,lowerdiagonal,n)
        return ans
        
        
    def solve(self,col,board,ans,leftrow,upperdiagonal,lowerdiagonal,n):
        
        if col == n:
            ans.append(["".join(i) for i in board])
            return 
        
        for row in range(n):
            if leftrow[row]==0 and upperdiagonal[row-col]==0 and lowerdiagonal[row+col]==0:

                board[row][col]="Q"
                leftrow[row]=1
                lowerdiagonal[col+row]=1
                upperdiagonal[row-col]=1
                self.solve(col+1,board,ans,leftrow,upperdiagonal,lowerdiagonal,n)
                board[row][col]="."
                leftrow[row]=0
                upperdiagonal[row-col]=0
                lowerdiagonal[col+row]=0

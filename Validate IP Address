#Runtime: 20 ms, faster than 99.15% of Python3 online submissions for Validate IP Address.
#Memory Usage: 14.4 MB, less than 16.73% of Python3 online submissions for Validate IP Address

class Solution:
    def validIPAddress(self, IP: str) -> str:
        if '.' in IP:
            splitted = IP.split('.')
            if len(splitted)!=4:
                return "Neither"
            for part in splitted:
                if (len(part)>1 and part[0] == "0") or len(part)==0 or not part.isnumeric() or int(part) > 255 or int(part) <0:
                    return "Neither"
            return "IPv4"
        
        if ':' in IP:
            splitted = IP.split(':')
            if len(splitted)!=8:
                return "Neither"
            for part in splitted:
                if len(part)<1 or len(part)>4:
                    return "Neither"
                for dig in part:
                    if dig not in 'abcdefABCDEF0123456789':
                        return "Neither"
            return "IPv6"
        return "Neither"
